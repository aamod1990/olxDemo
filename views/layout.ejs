<!DOCTYPE html>
<html>
  <head>
    <title>New Sails App</title>

    <!-- Viewport mobile tag for sensible mobile support -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
<link rel="stylesheet" href="/styles/importer.css">
<link href="/styles/customcss/style.css" rel="stylesheet" type="text/css">
<link rel="stylesheet" type="text/css" href="/styles/customcss/easydropdown.css"/>
<link rel="stylesheet" type="text/css" href="http://code.jquery.com/jquery-1.10.2.js"/>
<link rel="stylesheet" type="text/css" href="http://code.jquery.com/ui/1.11.1/themes/smoothness/jquery-ui.css"/>
<link rel="stylesheet" type="text/css" href="/styles/customcss/table.css"/>
<link rel="stylesheet" type="text/css" href="/styles/customcss/css/bootstrap.min.css"/>
<link rel="stylesheet" type="text/css" href="/styles/customcss/css/bootstrap.css"/>
 <!--STYLES END-->
<!--SCRIPT Start-->
<script src="/js/dependencies/sails.io.js"></script>
<script src="http://code.jquery.com/jquery-1.10.2.js"></script>
<script src="http://code.jquery.com/ui/1.11.1/jquery-ui.js"></script>
   <!--script End-->
  </head>

  <body>
    <section id="main-content" nicescroll>
    <!--header start-->
        <%- partial('header')%>
        <!--header end-->
    <!-- Include the view file for the current controller/route -->
    <div ui-view></div>
    <%-body %>
    <!--header end-->
     <!--footer start-->
    <%- partial('footer')%>
    <!--footer end-->            
    </section>
 

    <!--
        Client-side Templates
        ========================

        HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
        that you load these templates client-side.

        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/templates` folder, then
        include them here automatically (between TEMPLATES and TEMPLATES END).
        
        To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Import templates from other directories
            + Use a different template engine (handlebars, jade, dust, etc.)
            + Internationalize your client-side templates using a server-side
              stringfile before they're served.
    -->

    <!--TEMPLATES-->
    
    <!--TEMPLATES END-->


    <!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can 
      take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

      By default, files in your `assets/js` folder are included here
      automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
      CoffeeScript (.coffee) are supported. In production, your scripts will be minified
      and concatenated into a single file.
      
      To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
      For example, here are a few things you could do:
          
          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

    -->
  </body>
</html>
